// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Pomelo.EntityFrameworkCore.MySql.Scaffolding.Internal;

namespace TicketServiceAPI.ScaffoldModels;

public partial class TicketsContext : DbContext
{
    public TicketsContext()
    {
    }

    public TicketsContext(DbContextOptions<TicketsContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Rank> Ranks { get; set; }

    public virtual DbSet<Stagesofticket> Stagesoftickets { get; set; }

    public virtual DbSet<Ticketsdetail> Ticketsdetails { get; set; }

    IConfiguration JsonData { get; init; } = new ConfigurationBuilder().AddJsonFile("Connections.json").Build(); //Getting server navigation from appsettings.json
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseMySql(JsonData["ConnectionStrings:DefaultConnection"], Microsoft.EntityFrameworkCore.ServerVersion.Parse("8.0.40-mysql"));
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<Rank>(entity =>
        {
            entity.HasKey(e => e.RankId).HasName("PRIMARY");

            entity.ToTable("rank");

            entity.Property(e => e.RankDesc).HasMaxLength(50);
        });

        modelBuilder.Entity<Stagesofticket>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("stagesofticket");

            entity.Property(e => e.StageDesc)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<Ticketsdetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("ticketsdetails");

            entity.HasIndex(e => e.RankId, "ticketsdetails_rank_FK");

            entity.Property(e => e.CreateTime).HasColumnType("datetime");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasColumnType("text");
            entity.Property(e => e.ModifyTime)
                .HasDefaultValueSql("'1900-01-01 00:00:00'")
                .HasColumnType("datetime");
            entity.Property(e => e.RankId).HasDefaultValueSql("'3'");
            entity.Property(e => e.Stage).HasDefaultValueSql("'1'");
            entity.Property(e => e.Subject)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.SupportPerson).HasMaxLength(100);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}